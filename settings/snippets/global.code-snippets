{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Log to the console": {
		"body": ["console.log(${1:$TM_SELECTED_TEXT});"],
		"prefix": "log",
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	},
	"Log to the console as a hierarchical listing": {
		"body": ["console.dir(${1:$TM_SELECTED_TEXT});"],
		"prefix": "dir",
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	},
	"Log to the console with the info log level": {
		"body": [
			"console.info(",
			"\t'INFO ($RELATIVE_FILEPATH:$TM_LINE_NUMBER) ${1:$TM_SELECTED_TEXT}:',",
			"\t${2:$TM_SELECTED_TEXT},",
			");"
		],
		"prefix": "loginfo",
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	},
	"Log to the console with the warning log level": {
		"body": [
			"console.warn(",
			"\t'WARNING ($RELATIVE_FILEPATH:$TM_LINE_NUMBER) ${1:$TM_SELECTED_TEXT}:',",
			"\t${2:$TM_SELECTED_TEXT},",
			");"
		],
		"prefix": "logwarn",
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	},
	"Log to the console with the error log level": {
		"body": [
			"console.error(",
			"\t'ERROR ($RELATIVE_FILEPATH:$TM_LINE_NUMBER) ${1:$TM_SELECTED_TEXT}:',",
			"\t${2:$TM_SELECTED_TEXT},",
			");"
		],
		"prefix": "logerror",
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	},
	"Log to the console with the debug log level": {
		"body": [
			"console.debug(",
			"\t'DEBUG ($RELATIVE_FILEPATH:$TM_LINE_NUMBER) ${1:$TM_SELECTED_TEXT}:',",
			"\t${2:$TM_SELECTED_TEXT},",
			");"
		],
		"prefix": "logdebug",
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	}
}
